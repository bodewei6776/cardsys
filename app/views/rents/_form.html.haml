
= render :partial => "layouts/errors", :locals => {:target => @rent }
= form_header(:title => "请填写预定信息", :link => "")
= form_for @rent, :html => {:class => "form-horizontal well order_form"} do |f|
  = f.hidden_field :locker_id
  - control_helper("num", "编号", :left) do
    = @locker.num

  - control_helper("locker_type_in_words", "储物柜类型", :right) do
    = @locker.locker_type_in_words


  - control_helper("is_member", "是否是会员") do
    = f.radio_button :is_member,true, :onclick=> "toggle_is_member();",:id => "is_member_radio"
    是
    = f.radio_button :is_member,false,:onclick=> "toggle_is_member();",:id => "is_member_radio"
    否

  #is_not_member_div
    - control_helper("random_member_name", "预订人") do
      = f.text_field :random_member_name
  #is_member_div
    - control_helper("member_name", "会员姓名", :left) do
      = text_field_tag :member_name, @rent.member.try(:name), :id => "member_name"
      = f.hidden_field :member_id

    - control_helper("card_serial_num", "卡号", :right) do
      #cards
        = text_field_tag :card_serial_num, @rent.members_card.try(:card_serial_num), :id => "member_card_serial_num"
        = f.hidden_field :card_id


  - control_helper("start_date", "起租时间", :left) do
    = f.text_field :start_date,:class => "select-date" , :value => Date.today

  - control_helper("end_date", "退租时间", :right) do
    = f.text_field :end_date ,:class => "select-date" 

  - if @rent.new_record?
    - control_helper("total_fee", "租用费用", :left) do
      = f.text_field :total_fee, :value => ""

  - else
    - control_helper("total_fee", "续租费用", :left) do
      = f.text_field :total_fee, :value => ""


  - control_helper("remark", "备注", :right) do
    = f.text_field :remark

  - control_helper("login", "操作人", :left) do
    = f.text_field :login, :value => current_user.login

  - control_helper("password", "密码", :right) do
    = f.password_field :password

  .form-actions
    = f.submit "#{@rent.new_record? ? "出租" : "续租"}", :class => "btn"
    - if @rent.locker.rented?
      = f.submit "退租", :class => "btn"

:javascript
  function toggle_is_member(){
    if($('input:radio:checked').attr('value')  == "false"){
      $('#is_not_member_div').show();
      $('#is_member_div').hide();

    }
    else{
      $('#is_not_member_div').hide();
      $('#is_member_div').show();

    }
  }

  $(document).ready(function(){
      toggle_is_member();
  });



:javascript
  $(document).ready(function(){
    $('#member_name').autocomplete({
      source:  '/members/autocomplete_name',
        select:  function(ui,li){
          var item = li.item;
            var reqest_url  = "/members/" + item.id + "/member_cards_list";
              $('#rent_member_id').val(item.id);
                $.get(reqest_url,function(returned_data)
                  {
                    options = "";
                   $(returned_data).each(function(i,node){
                     options +=("<option value='" + node.members_card.id+
                       "'>" + node.members_card.card_serial_num + "</option>") 
                    });
                    $('#cards').html( "<select name='rent[card_id]'>" + options + "</select>");
                     $("#cards select").bind("change", function(){
                       $("#rent_card_id").val(($("#cards select").val()));
                     });
                     $("#cards select").trigger("change");
                  });
               }			
            });

    $('#member_card_serial_num').autocomplete({
      source:  '#{autocomplete_card_serial_num_members_cards_path}',
      select:  function(ui,li){
        var item = li.item;
          $('#member_name').val(item.member_name);
          $('#rent_member_id').val(item.member_id);
              }			
           });

   });
